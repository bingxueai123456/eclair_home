---
description:
globs:
alwaysApply: false
---
# 样式开发指南

## CSS架构概览

### 主要样式文件
- [App.css](mdc:src/App.css) - 包含所有组件样式和主题系统
- [index.css](mdc:src/index.css) - 基础重置样式和全局配置

## 主题系统

### CSS变量定义
参考 [App.css](mdc:src/App.css) 中的主题变量：

```css
/* 明亮主题 */
:root {
  --primary-color: #2563eb;
  --secondary-color: #f3f4f6;
  --text-color: #1f2937;
  --bg-color: #ffffff;
  --card-bg: rgba(255, 255, 255, 0.8);
  --border-color: rgba(229, 231, 235, 0.8);
}

/* 暗黑主题 */
[data-theme="dark"] {
  --primary-color: #3b82f6;
  --secondary-color: #374151;
  --text-color: #f9fafb;
  --bg-color: #111827;
  --card-bg: rgba(31, 41, 55, 0.8);
  --border-color: rgba(75, 85, 99, 0.8);
}

/* 渐变主题 */
[data-theme="gradient"] {
  --primary-color: #8b5cf6;
  --secondary-color: #f8fafc;
  --text-color: #1e293b;
  --bg-color: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  --card-bg: rgba(255, 255, 255, 0.9);
  --border-color: rgba(148, 163, 184, 0.6);
}
```

### 主题切换实现
在 [App.jsx](mdc:src/App.jsx) 中通过修改 `data-theme` 属性切换主题：
```javascript
document.documentElement.setAttribute('data-theme', theme);
```

## 组件样式规范

### 卡片组件样式
参考 [App.css](mdc:src/App.css) 中的卡片样式：
```css
.card {
  background: var(--card-bg);
  border: 1px solid var(--border-color);
  border-radius: 12px;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

.card:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}
```

### 玻璃拟态效果
核心CSS属性：
```css
background: rgba(255, 255, 255, 0.8);
backdrop-filter: blur(10px);
border: 1px solid rgba(255, 255, 255, 0.2);
```

### 响应式断点
```css
/* 平板端 */
@media (max-width: 1024px) {
  /* 调整间距和字体 */
}

/* 移动端 */
@media (max-width: 768px) {
  /* 侧边栏抽屉式，堆叠布局 */
}

/* 小屏设备 */
@media (max-width: 480px) {
  /* 进一步优化间距和字体 */
}
```

## 动画和过渡效果

### 标准过渡
```css
transition: all 0.3s ease;
```

### 悬停效果
```css
transform: translateY(-2px);
box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
```

### 加载动画
```css
@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

.loading {
  animation: pulse 2s infinite;
}
```

## 布局系统

### 主要布局结构
参考 [App.jsx](mdc:src/App.jsx) 和 [App.css](mdc:src/App.css)：

```css
.app-container {
  display: flex;
  min-height: 100vh;
  background: var(--bg-color);
}

.sidebar {
  width: 300px;
  background: var(--card-bg);
  backdrop-filter: blur(10px);
}

.main-content {
  flex: 1;
  padding: 2rem;
  overflow-y: auto;
}
```

### 网格布局
```css
.content-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: 1.5rem;
}
```

### Flexbox布局
```css
.flex-container {
  display: flex;
  gap: 1rem;
  align-items: center;
}
```

## 图标和字体

### FontAwesome图标
```css
.icon {
  color: var(--primary-color);
  margin-right: 0.5rem;
}
```

### 字体层级
```css
.title-large { font-size: 1.875rem; font-weight: 700; }
.title-medium { font-size: 1.5rem; font-weight: 600; }
.title-small { font-size: 1.25rem; font-weight: 600; }
.body-text { font-size: 1rem; line-height: 1.6; }
.caption { font-size: 0.875rem; color: var(--text-secondary); }
```

## 新组件样式开发

### 命名规范
- 使用kebab-case：`.rss-feed-card`
- 组件前缀：`.component-name`
- 状态修饰符：`.component-name--active`

### 样式结构
```css
/* 组件基础样式 */
.component-name {
  /* 基础样式 */
}

/* 组件状态 */
.component-name--active {
  /* 激活状态 */
}

/* 组件变体 */
.component-name__element {
  /* 子元素样式 */
}

/* 响应式适配 */
@media (max-width: 768px) {
  .component-name {
    /* 移动端样式 */
  }
}
```

### 主题适配
确保新组件使用CSS变量：
```css
.new-component {
  color: var(--text-color);
  background: var(--card-bg);
  border: 1px solid var(--border-color);
}
```

## 调试技巧

### 检查主题变量
```javascript
// 在浏览器控制台中检查当前主题变量
getComputedStyle(document.documentElement).getPropertyValue('--primary-color');
```

### CSS调试类
```css
.debug-border { border: 2px solid red !important; }
.debug-bg { background: rgba(255, 0, 0, 0.2) !important; }
```

## 性能优化

### CSS优化
- 避免深层嵌套（最多3层）
- 使用transform和opacity进行动画
- 合理使用will-change属性
- 避免布局抖动（layout thrashing）

### 关键CSS
主要组件样式应该内联或在首屏加载，参考 [App.css](mdc:src/App.css) 的组织方式。
